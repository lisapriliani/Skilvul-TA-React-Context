{"ast":null,"code":"var _jsxFileName = \"D:\\\\SKILVUL\\\\netlify deploy\\\\Technical-Assigment-Skilvul\\\\16-React-Context\\\\counter-app-react-context\\\\src\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useCount } from \"./CountContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  // set dispatch and state count from useCount()\n  const count = useCount();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Count: \", count.state.count, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"count-button\",\n        onClick: () => count.dispatch({\n          type: \"increment\"\n        }),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"count-button\",\n        onClick: () => count.dispatch({\n          type: \"decrement\"\n        }),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Counter, \"jAqtA3O2bSUoAGLEP5ROVXCwvYE=\", false, function () {\n  return [useCount];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["D:/SKILVUL/netlify deploy/Technical-Assigment-Skilvul/16-React-Context/counter-app-react-context/src/Counter.js"],"names":["React","useCount","Counter","count","state","dispatch","type"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAMC,KAAK,GAAGF,QAAQ,EAAtB;AACA,sBACE;AAAA,0BAEUE,KAAK,CAACC,KAAN,CAAYD,KAFtB,eAGE;AAAA,8BAEE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,MAAMA,KAAK,CAACE,QAAN,CAAe;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAf,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,MAAMH,KAAK,CAACE,QAAN,CAAe;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAf,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAeD,CAlBD;;GAAMJ,O;UAEUD,Q;;;KAFVC,O;AAoBN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { useCount } from \"./CountContext\";\r\n\r\nconst Counter = () => {\r\n  // set dispatch and state count from useCount()\r\n  const count = useCount();\r\n  return (\r\n    <>\r\n      {/* change 0 with count from context */}\r\n      Count: {count.state.count}\r\n      <div>\r\n        {/* use dispatch for onClick method */}\r\n        <button className=\"count-button\" onClick={() => count.dispatch({ type: \"increment\" })}>\r\n          +\r\n        </button>\r\n        <button className=\"count-button\" onClick={() => count.dispatch({ type: \"decrement\" })}>\r\n          -\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}